#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : cColorationHTML
 major_version : 28
 minor_version : 0
 type : 4
 description : ""
 subtype : 0
class :
 identifier : 0x126681ab006cb052
 internal_properties : CAAAAAgAAAB2/vstTMCJbS/hlxjFxirSqKvCUuv8YxgpWyl7S3iA
 code_elements :
  type_code : 10
  p_codes :
   -
     code : |1-
      
      // Classe cColorationXML
      // Classe dérivée de cColoration pour la coloration syntaxe du XML
      cColorationHTML est une classe
      	hérite de cColoration
      	
      	m_sAttributCourant est une chaine  = ""
      Fin
     type : 131072
  procedures :
   -
     name : Constructeur
     internal_properties : CAAAAAgAAADKqS0VoUwVALvEGJz/VtQBnIkFwSoWtxnGq2cRLTCHpZ6eXH/Ds2YR2yFO5u2aU2SdPiIst6ezBVAhgRqqn994EKwHyRBFTo77OjagiwRMi5E9o48haAGbYtEbsWgi2CuaHrfP2/IfeIvsuGTZ+Z7MFU1oEEbcLPtS3Dzrn36Yrrqfbk5NDHHZEwTBLvrQke8UhOlmxfI3OeWTXDxqixSGVNv8Dipkwtg6C79laCLwMQIJRyurITfpqh55MIOfipSgeSAOP624zroDsHaJ8GV449jpZ36AWhjFvWbN7mWBZDOM39+tIUR3q5HUbF5SLg//lrBBtzx7tdl8j6aX9qdrD99/snd9/y5mdtfYh1+FRKCMe/fxqKBK2lUQtLYd3swWBxrJOR9DbTrWS5dyiWunXfqZkYNdzEHbDuWfqxB+vrxeTpDr8socGbTdJrFXG37GgDg5uzd3OnOzwc7LwCSeL7Ifdb1d8zuTKGnvb58lZ4jmdLuG1v3cVGiMsVE/kw/06+P3eF7MACzW1X319qY7XEGmTrjqyZa5uoaj7a/v5Jt3sFwuDZCzz6onpJK8virA6Jh8mLpCjYANdw9A7nKXizndtZ/YPbJkdIdwo53Yenbl8U4tCnCnTw/a38Ae+yn5DhRr6FkrhGv7xkz2h/LMmSee2d40pGOOqdS3haZSv+/PpYdsqFUK8jwnX7LxSeR2aB0VSYapHRPQbcAyHoySnMoSUShVvveaSsM2/7bpWU8Eh/gHshbZ9oBRIdC5eFoBVDNKadkhLeBO7GlViteUuChZ6IzpHAgPDMlugKcTyhqUkaEzTDuhkVrtSFqabfe1o0uMY4Q74JJyLcz1sfSarJEDbFVssHoxjVg6/OlEmB9lTC+O7Hed4E6KSGSFWt0I+L9yLqTBh0wZym3bbBwq+GYHi0AfvUA=
     procedure_id : 1325889711753769042
     type_code : 27
     code : |1-
      Procédure Constructeur(LOCAL sCode est un chaîne = "")
      
      	// Appel du constructeur
      	Constructeur cColoration(sCode)
      
      	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      	// Globales à modifier en cas de surcharge
      	
      	//				  [Début1, 			Fin1],  [Début2,	Fin2], ...
      	L_COMMENTAIRE		= [["<!--", 		"-->"	]]																					// Un commentaire est encadré par <!-- et -->
      	L_CHAÎNE			= [[""""	, 		""""	] , ["&" , ";"] ]													// Une chaîne débute avec " et termine par " ou il s'agit également du texte entre balise
      	L_PROPRIETE			= [["<"	, 		">"	], ["<"	, 		" "	],  ["/"	, ">"], ["data-", "="], [":",">"]]	
      	L_ECHAP				= ""																										// Pas de caractère d'échappement
      	VariableRAZ(L_CESURE)																										// Pas de césure	
      		
      	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
      	// Style de coloration à modifier en cas de surcharge
      	
      	//					  Police, 		  Taille, 	Italique, 	Gras, Souligné, Couleur
      	S_DEFAUT			= ["monospace"	, 9, 		Faux, 		Faux, Faux, 	noir]
      	S_CHAÎNE			= ["monospace"	, 9, 		Faux, 		Faux, Faux, 	RVB(26,26,166)]
      	S_CHAÎNE_URL		= ["monospace"	, 9, 		Faux, 		Faux, vrai, 	RVB(0,0,238)]
      	S_COMMENTAIRE		= ["monospace"	, 9, 		Faux, 		Faux, Faux, 	RVB(35,110,37)]
      	S_CONSTANTE			= ["monospace"	, 9, 		Vrai, 		Faux, Faux, 	rvb(192, 192, 192)]
      	S_ERREUR			= ["monospace"	, 9, 		Faux, 		Faux, Faux, 	Noir]
      	S_FONCTION			= ["monospace"	, 9, 		Faux, 		vrai, Faux, 	RVB(153,69,0)]
      	S_MOTCLE			= ["monospace"	, 9, 		Faux, 		Faux, Faux, 	noir]
      	S_NUMERIQUE			= ["monospace"	, 9, 		Faux, 		Faux, Faux, 	RougeClair]
      	S_PROPRIETE			= ["monospace"	, 9, 		vrai, 		Faux, Faux, 	RVB(136,18,128)]
      	S_SYMBOLE			= ["monospace"	, 9, 		Faux, 		Faux, Faux, 	noir]
      	S_VARIABLE			= ["monospace"	, 9, 		Faux, 		Faux, Faux, 	RougeFoncé]		
      	
      	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
      	// Définition du langage XML
      	
      	_LANGAGE_ 	est un tableau de 0 cColoration::LANGAGE
      	
      	// Enregistre les constantes
      	Ajoute(_LANGAGE_,  [MARK_LANG_CONSTANTE, [...
      		"<!DOCTYPE html" 	,...
      		"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01//EN"" ""http://www.w3.org/TR/html4/strict.dtd"">" 	,...
      		"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd"">" 	,...
      		"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Frameset//EN"" ""http://www.w3.org/TR/html4/frameset.dtd"">" 	,...
      		"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD XHTML 1.0//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"">" 	,...
      		"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">" 	,...
      		"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD XHTML 1.0 Frameset//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd"">" 	,...
      		"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD XHTML 1.1//EN"" ""http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"">" 	,...
      		"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD XHTML Basic 1.1//EN"" ""http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd"">" 	,...
      	]])			
      		
      	// Définit les fonctions
      	Ajoute(_LANGAGE_,  [MARK_LANG_FONCTION, [ ...
      		 "accept="...
      		,"accept-charset="...
      		,"accesskey="...
      		,"action="...
      		,"align="...
      		,"alt="...
      		,"async="...
      		,"autocomplete="...
      		,"autofocus="...
      		,"autoplay="...
      		,"bgcolor="...
      		,"border="...
      		,"buffered="...
      		,"challenge="...
      		,"charset="...
      		,"checked="...
      		,"cite="...
      		,"class="...
      		,"code="...
      		,"codebase="...
      		,"color="...
      		,"cols="...
      		,"colspan="...
      		,"content="...
      		,"contenteditable="...
      		,"contextmenu="...
      		,"controls="...
      		,"coords="...
      		,"data="...
      		,"data-custom="...
      		,"datetime="...
      		,"default="...
      		,"defer="...
      		,"dir="...
      		,"dirname="...
      		,"disabled="...
      		,"download="...
      		,"draggable="...
      		,"dropzone="...
      		,"enctype="...
      		,"for="...
      		,"form="...
      		,"headers="...
      		,"height="...
      		,"hidden="...
      		,"high="...
      		,"href="...
      		,"hreflang="...
      		,"http-equiv="...
      		,"icon="...
      		,"id="...
      		,"ismap="...
      		,"itemprop="...
      		,"keytype="...
      		,"kind="...
      		,"label="...
      		,"lang="...
      		,"language="...
      		,"list="...
      		,"loop="...
      		,"low="...
      		,"manifest="...
      		,"max="...
      		,"maxlength="...
      		,"media="...
      		,"method="...
      		,"min="...
      		,"multiple="...
      		,"name="...
      		,"novalidate="...
      		,"onabort="...
      		,"onblur="...
      		,"oncancel="...
      		,"oncanplay="...
      		,"oncanplaythrough="...
      		,"onchange="...
      		,"onclick="...
      		,"onclose="...
      		,"oncontextmenu="...
      		,"oncuechange="...
      		,"ondblclick="...
      		,"ondrag="...
      		,"ondragend="...
      		,"ondragenter="...
      		,"ondragexit="...
      		,"ondragleave="...
      		,"ondragover="...
      		,"ondragstart="...
      		,"ondrop="...
      		,"ondurationchange="...
      		,"onemptied="...
      		,"onended="...
      		,"onerror="...
      		,"onfocus="...
      		,"oninput="...
      		,"oninvalid="...
      		,"onkeydown="...
      		,"onkeypress="...
      		,"onkeyup="...
      		,"onload="...
      		,"onloadeddata="...
      		,"onloadedmetadata="...
      		,"onloadstart="...
      		,"onmousedown="...
      		,"onmouseenter="...
      		,"onmouseleave="...
      		,"onmousemove="...
      		,"onmouseout="...
      		,"onmouseover="...
      		,"onmouseup="...
      		,"onmousewheel="...
      		,"onpause="...
      		,"onplay="...
      		,"onplaying="...
      		,"onprogress="...
      		,"onratechange="...
      		,"onreset="...
      		,"onscroll="...
      		,"onseeked="...
      		,"onseeking="...
      		,"onselect="...
      		,"onshow="...
      		,"onsort="...
      		,"onstalled="...
      		,"onsubmit="...
      		,"onsuspend="...
      		,"ontimeupdate="...
      		,"onvolumechange="...
      		,"onwaiting="...		
      		,"open="...
      		,"optimum="...
      		,"pattern="...
      		,"ping="...
      		,"placeholder="...
      		,"poster="...
      		,"preload="...
      		,"pubdate="...
      		,"radiogroup="...
      		,"readonly="...
      		,"rel="...
      		,"required="...
      		,"reversed="...
      		,"rows="...
      		,"rowspan="...
      		,"sandbox="...
      		,"spellcheck="...
      		,"scope="...
      		,"scoped="...
      		,"seamless="...
      		,"selected="...
      		,"shape="...
      		,"size="...
      		,"sizes="...
      		,"span="...
      		,"src="...
      		,"srcdoc="...
      		,"srclang="...
      		,"start="...
      		,"step="...
      		,"style="...
      		,"summary="...
      		,"tabindex="...
      		,"target="...
      		,"title="...
      		,"type="...
      		,"usemap="...
      		,"value="...
      		,"width="...
      		,"wrap="...
      
      		//autre attribut
      	]])		
      			
      	// Non utilisés :
      	// MARK_LANG_SYMBOLE	
      	// MARK_LANG_PROPRIÉTÉ	
      	// MARK_LANG_FONCTION	
      	// MARK_LANG_VARIABLE	
      	// MARK_LANG_MOTCLÉ		
      				 
      	// Définit le langage à utiliser	
      	SetLangage(_LANGAGE_)
     type : 589824
   -
     name : Destructeur
     procedure_id : 1325889711753834578
     type_code : 28
     code : |1+
      Procédure Destructeur()
      
     type : 655360
   -
     name : TraiteMarqueAvantAjout
     internal_properties : CAAAAAgAAAAqfDrgriaTsNKnoAgwYHq/YBDVaIPdjeR1VEo/vzFcOGRJ3cJSZZ8PG6l3iF2SwOIJ5Kz9k7gF+y7kHyJ9kOiyf4Gl6ZSxsH3J0o4OXMu3LZ/R6PhT8uLCOdoLDGeu/5VyBBzyGltKMtMa629WkCiEXPdkF9BB3bcZIms8d/TFHbUUK8MzJhfF8wTcGJbHMBgvc6K7iw==
     procedure_id : 1325902317488667486
     type_code : 12
     code : |1-
      // Résumé : Traite un marqueur avant l'ajout
      // Syntaxe :
      //TraiteMarqueAvantAjout (<pstMarqueur> est MARQUEUR dynamique)
      //
      // Paramètres :
      //	pstMarqueur (MARQUEUR dynamique) : Marqueur à traiter
      // Valeur de retour :
      // 	Aucune
      //
      PROCEDURE PROTÉGÉE VIRTUELLE TraiteMarqueAvantAjout(pstMarqueur est un cColoration::MARQUEUR dynamique <utile>)
      
      	SI pstMarqueur.nMarqueur=MARK_CHAÎNE _ET_ m_sAttributCourant DANS ("src","href") ALORS	
      		//applique le style de chaîne URL
      		pstMarqueur.nMarqueur = MARK_CHAÎNE_URL
      		//retire les guillemets du souligné
      		pstMarqueur.nLongueur-=2
      		pstMarqueur.nPosition++
      		retour
      	FIN
      	
      	m_sAttributCourant = ""
      	
      	//en html on retire le = du symbole des attributs
      	nTaille est un entier = Taille(pstMarqueur.sRemplacement)
      	si nTaille<2 retour
      	
      	//permet de ne pas avoir le "=" de la même couleur que l'attribut
      	si pstMarqueur.sRemplacement[[nTaille]] = "=" ALORS
      		pstMarqueur.sRemplacement = pstMarqueur.sRemplacement[[1 A nTaille-1]]
      		pstMarqueur.nLongueur--
      	
      		//attribut courant
      		m_sAttributCourant =  pstMarqueur.sRemplacement
      	FIN
     type : 458752
   -
     name : SeparateurLigne
     procedure_id : 1325926661371131668
     type_code : 12
     code : |1-
      // Résumé : Renvoie le caractère de séparateur de lignes
      // Syntaxe :
      //[ <Résultat> = ] SeparateurLigne ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	chaîne ANSI : Caractère séparateur de ligne
      //
      PROCEDURE PROTÉGÉE VIRTUELLE SeparateurLigne() : chaîne ANSI
      RENVOYER RC
     type : 458752
   -
     name : DelimiteurChaineAutoriseEspace
     procedure_id : 1326184453900326197
     type_code : 12
     code : |1-
      // Résumé : Vérifie si le caractère est autorisé en tant que délimiteur de chaînes
      // Syntaxe :
      //[ <Résultat> = ] DelimiteurChaineAutoriseEspace (<sCaractère> est chaîne ANSI)
      //
      // Paramètres :
      //	sCaractère (chaîne ANSI) : Caractère à tester
      // Valeur de retour :
      // 	booléen : Vrai si le caractère est un délimiteur autorisé, Faux sinon
      //
      PROCEDURE PROTÉGÉE VIRTUELLE DelimiteurChaineAutoriseEspace(LOCAL sCaractère est une chaine ansi)
      
      	// Les entités &<code>; sont considérées comme des chaînes sans espace
      	renvoyer (sCaractère <> "&")
     type : 458752
   -
     name : MarqueurLemmeVide
     procedure_id : 1326192953640683809
     type_code : 12
     code : |1-
      // Résumé : Ajoute un lemme vide
      // Syntaxe :
      //MarqueurLemmeVide ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	Aucune
      //
      PROCEDURE PROTÉGÉE VIRTUELLE MarqueurLemmeVide()
     type : 458752
   -
     name : DebutChaineAutorisee
     procedure_id : 1326193846994023822
     type_code : 12
     code : |1-
      // Résumé : Vérifie si le caractère est autorisé en début de chaîne
      // Syntaxe :
      //[ <Résultat> = ] DebutChaineAutorisee (<sCaractère> est chaîne ANSI)
      //
      // Paramètres :
      //	sCaractère (chaîne ANSI) : Caractère à tester
      // Valeur de retour :
      // 	booléen : Vrai si le caractère est autorisé, Faux sinon
      //
      PROCEDURE PROTÉGÉE VIRTUELLE DebutChaineAutorisee(LOCAL sCaractère est une chaine ansi)
      RENVOYER (ccoloration::EstUneLettre(sCaractère) _ou_ sCaractère dans ("_", "$", "#", "/"))
     type : 458752
   -
     name : FinChaineAutorisee
     procedure_id : 1326194615793807413
     type_code : 12
     code : |1-
      // Résumé : Vérifie si le caractère est autorisé en fin de chaîne
      // Syntaxe :
      //[ <Résultat> = ] FinChaineAutorisee (<sCaractère> est chaîne ANSI)
      //
      // Paramètres :
      //	sCaractère (chaîne ANSI) : Caractère à tester
      // Valeur de retour :
      // 	booléen : Vrai si le caractère est autorisé, Faux sinon
      //
      PROCEDURE PROTÉGÉE VIRTUELLE FinChaineAutorisee(LOCAL sCaractère est une chaine ansi)
      RENVOYER (sCaractère DANS ("_", "$", "#", "=", ">"))
     type : 458752
   -
     name : ContenuChaineAutorisee
     procedure_id : 1326197102580057594
     type_code : 12
     code : |1-
      // Résumé : Détermine si un caractère est autorisé
      // Syntaxe :
      //[ <Résultat> = ] ContenuChaineAutorisee (<sCaractère> est chaîne ANSI, <sSuivant> est chaîne ANSI)
      //
      // Paramètres :
      //	sCaractère (chaîne ANSI) : Caractère en cours
      //	sSuivant (chaîne ANSI) : Caractère suivant
      // Valeur de retour :
      // 	booléen : Vrai si le contenu est autorisé, Faux sinon
      //
      PROCEDURE PROTÉGÉE VIRTUELLE ContenuChaineAutorisee(LOCAL sCaractère est une chaine ansi, local sSuivant est une chaine ansi <utile>)
      
      	SI ccoloration::EstUneLettre(sCaractère) _OU_ cColoration::EstUnNombre(sCaractère) ALORS	
      		RENVOYER Vrai	
      	FIN
      
      RENVOYER Faux
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : CAAAAAgAAACVGQgYbalU7DKC3oH4ItDrjtcTHXXV/EuH8q0IbhyQlw==
  original_name : CClasse1
resources :
 string_res :
  identifier : 0x1fbe1c7800135e55
  internal_properties : CAAAAAgAAACm76HWfKGWp33VjXInA4cRlqArlgTTA862QGt72W2ld5Y=
custom_note :
 internal_properties : CAAAAAgAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
